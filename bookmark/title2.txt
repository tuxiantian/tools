1 简洁之美 @1
2 Python绘图 @3
3 Python动画 @4
4 Python数据分析 @6
5 Python机器学习 @6
6 Python-GUI@6
1 求绝对值 @6
2 元素都为真 @7
3 元素⾄少⼀个为真 @7
4 ascii展⽰对象 @7
5 ⼗转⼆ @7
6 ⼗转⼋ @7
7 ⼗转⼗六 @8
8 判断是真是假 @8
9 字符串转字节 @8
10 转为字符串 @8
11 是否可调⽤ @8
12 ⼗转ASCII@9
13 ASCII转⼗ @9
14 类⽅法 @9
15 执⾏字符串表⽰的代码 @10
16 创建复数 @10
17 动态删除属性 @10
18 转为字典 @10
19 ⼀键查看对象所有⽅法 @11
20 取商和余数 @11
21 枚举对象 @11
22 计算表达式 @12
23 查看变量所占字节数 @12
24 过滤器 @12
25 转为浮点类型 @12
26 字符串格式化 @13
27 冻结集合 @13
28 动态获取对象属性 @13
29 对象是否有这个属性 @14
30 返回对象的哈希值 @14
31 ⼀键帮助 @14
32 对象门牌号 @14
33 获取⽤户输⼊ @15
34 转为整型 @15
35 isinstance@15
36 ⽗⼦关系鉴定 @15
37 创建迭代器类型 @16
38 所有对象之根 @16
39 打开⽂件 @16
40 次幂 @17
41 打印 @17
42 创建属性的两种⽅式 @17
43 创建range序列 @18
44 反向迭代器 @18
45 四舍五⼊ @19
46 转为集合类型 @19
47 转为切⽚对象 @19
48 拿来就⽤的排序函数 @19
49 求和函数 @20
50 转元组 @20
51 查看对象类型 @20
52 聚合迭代器 @21
53 nonlocal⽤于内嵌函数中 @21
54 global 声明全局变量 @21
55 链式⽐较 @22
56 不⽤else和if实现计算器 @22
57 链式操作 @22
58 交换两元素 @23
59 去最求平均 @23
60 打印99乘法表 @23
61 全展开 @24
62 列表等分 @24
63 列表压缩 @25
64 更长列表 @25
65 求众数 @25
66 多表之最 @25
67 列表查重 @25
68 列表反转 @26
69 浮点数等差数列 @26
70 按条件分组 @26
71 map实现向量运算 @26
72 值最⼤的字典 @26
73 合并两个字典 @27
74 topn字典 @27
75 异位词 @27
76 逻辑上合并字典 @27
77 命名元组提⾼可读性 @28
78 样本抽样 @28
79 重洗数据集 @28
80 10个均匀分布的坐标点 @28
81 10个⾼斯分布的坐标点 @28
82 chain⾼效串联多个容器对象 @29
83 操作函数对象 @29
84 ⽣成逆序序列 @29
85 函数的五类参数使⽤例⼦ @30
86 使⽤slice对象 @31
87 lambda 函数的动画演⽰ @32
88 粘性之禅 @33
7 ⾏代码够烧脑，不信试试~~@33
89 元类 @34
90 对象序列化 @35
1 反转字符串 @36
2 字符串切⽚操作 @36
3 join串联字符串 @36
4 字符串的字节长度 @36
5 查找第⼀个匹配串 @37
6 查找所有1的索引 @37
7 \d 匹配数字[0-9]@37
8 匹配浮点数和整数 @37
9 ^匹配字符串的开头 @38
10 re.I 忽略⼤⼩写 @38
11 理解compile的作⽤ @38
12 使⽤()捕获单词，不想带空格 @38
13 split分割单词 @39
14 match从字符串开始位置匹配 @39
2) search函数 search是从字符串的任意位置开始匹配 @39
15 替换匹配的⼦串 @39
16 贪⼼捕获 @40
17 ⾮贪⼼捕获 @40
18 常⽤元字符总结 @40
19 常⽤通⽤字符总结 @40
20 密码安全检查 @40
21 爬取百度⾸页标题 @41
22 批量转化为驼峰格式(Camel)@41
23 str1是否为str2的permutation@42
24 str1是否由str2旋转⽽来 @43
25 正浮点数 @43
0.0 到 1.0 间的浮点数： ^0\.\d*[1-9]\d*$@44
1 获取后缀名 @45
2 ⽂件读操作 @45
3 ⽂件写操作 @45
4 路径中的⽂件名 @46
5 批量修改⽂件后缀 @46
6 xls批量转换成xlsx@47
7 定制⽂件不同⾏ @48
8 获取指定后缀名的⽂件 @49
9 批量获取⽂件修改时间 @50
10 批量压缩⽂件 @51
11 32位加密 @51
12 年的⽇历图 @51
13 判断是否为闰年 @52
14 ⽉有⼏天 @53
15 ⽉第⼀天 @53
16 ⽉最后⼀天 @53
17 获取当前时间 @54
18:13:41@54
18 字符时间转时间 @54
19 时间转字符时间 @54
20 默认启动主线程 @55
21 创建线程 @55
3 交替获得CPU时间⽚ @56
22 多线程抢夺同⼀个变量 @56
23 代码稍作改动，叫问题暴露出来 @57
24 加上⼀把锁，避免以上情况出现 @58
25 1 分钟掌握 time 模块 @59
26 4G 内存处理 10G ⼤⼩的⽂件 @60
4G 内存处理 10G ⼤⼩的⽂件，单机怎么做？ @60
1 寻找第n次出现位置 @62
2 斐波那契数列前n项 @62
3 找出所有重复元素 @62
4 联合统计次数 @62
5 groupby单字段分组 @63
6 itemgetter和key函数 @63
7 groupby多字段分组 @64
8 sum函数计算和聚合同时做 @64
9 list分组(⽣成器版)@65
10 列表全展开（⽣成器版） @65
11 测试函数运⾏时间的装饰器 @65
12 统计异常出现次数和时间的装饰器 @66
13 测试运⾏时长的装饰器 @67
14 装饰器通俗理解 @68
15 定制递减迭代器 @69
1 __nex__名字不能变，实现定制的迭代逻辑 @70
2 raise StopIteration：通过 raise 中断程序，必须这样写 @70
1 turtle绘制奥运五环图 @70
1 导⼊库 @70
2 定义画圆函数 @70
3 画笔基本设置 @70
4 绘制五环图 @70
2 turtle绘制漫天雪花 @71
3 wordcloud词云图 @72
4 plotly画柱状图和折线图 @73
5 seaborn热⼒图 @74
6 matplotlib折线图 @75
7 matplotlib散点图 @76
8 matplotlib柱状图 @77
9 matplotlib等⾼线图 @79
10 imshow图 @79
11 pyecharts绘制仪表盘 @81
12 pyecharts漏⽃图 @81
13 pyecharts⽇历图 @82
14 pyecharts绘制graph图 @83
15 pyecharts⽔球图 @84
16 pyecharts饼图 @85
17 pyecharts极坐标图 @86
18 pyecharts词云图 @87
19 pyecharts系列柱状图 @88
20 pyecharts热⼒图 @89
21 matplotlib绘制动画 @90
22 pyecharts绘图属性设置⽅法 @91
23 pyecharts绘图属性设置⽅法(下)@93
1)柱状图显⽰效果动画对应控制代码： @93
2)柱状图显⽰主题对应控制代码： @93
3)添加x轴对应的控制代码： @93
4)添加y轴对应的控制代码： @93
5)修改柱间距对应的控制代码： @93
6)A系列柱⼦是否显⽰对应的控制代码： @94
7)A系列柱⼦颜⾊渐变对应的控制代码： @94
1, [{@94
8)A系列柱⼦最⼤和最⼩值 标记点 对应的控制代码： @94
9)A系列柱⼦最⼤和最⼩值 标记线 对应的控制代码： @94
10)柱状图标题对应的控制代码： @94
11)柱状图⾮常有⽤的toolbox显⽰对应的控制代码： @94
12)Y轴显⽰在右侧对应的控制代码： @94
13)Y轴名称对应的控制代码： @94
14)数据轴区域放⼤缩⼩设置对应的控制代码： @95
24 pyecharts原来可以这样快速⼊门(上)@95
1)简洁的 API 设计，使⽤如丝滑般流畅，⽀持链式调⽤;@96
2)囊括了 30+ 种常见图表，应有尽有;@96
3)⽀持主流 Notebook 环境，Jupyter Notebook 和 JupyterLab;@96
4)可轻松集成⾄ Flask，Django 等主流 Web 框架;@96
5)⾼度灵活的配置项，可轻松搭配出精美的图表 @96
1)为什么根据图1中的包结构，为什么不这么写： from pyecharts.charts.basic_charts import@97
2) Bar(RectChart)是什么意思 @97
25 pyecharts原来可以这样快速⼊门(中)@98
26 pyecharts原来可以这样快速⼊门(下)@99
1)与包结构组织相关的 __init__.py； @101
2)类的继承关系:Bar->RectChart->Chart； @101
3)链式调⽤； @101
4)重要的参数配置包 options，以TitleOpts类为例， set_global_opts将它装载到Bar类中实现属性 @101
27 1 分钟学会画 pairplot 图 @101
1 含单个元素的元组 @104
2 默认参数设为空 @104
3 共享变量未绑定之坑 @104
4 lambda⾃由参数之坑 @104
5 各种参数使⽤之坑 @105
6 列表删除之坑 @107
7 列表快速复制之坑 @107
8 字符串驻留 @108
9 相同值的不可变对象 @108
10 对象销毁顺序 @108
11 充分认识for@109
12 认识执⾏时机 @109
13 创建空集合错误 @110
14 pyecharts传⼊Numpy数据绘图失败 @110
1 优化代码异常输出包 @112
2 图像处理包pillow@114
3 ⼀⾏代码找到编码 @116
1 领略算法魅⼒ @118
2 排序算法的动画展⽰ @119
3 先拿冒泡实验 @120
4 快速排序 @121
5 选择排序 @122
6 堆排序 @123
7 综合 @124
8 优化算法 @124
1. 仅含等式约束 @124
2. 仅含不等式约束 @124
3. 等式和不等式约束混合型 @124
9 仅含等式约束 @124
10 找找感觉 @125
11 梯度下降 @127
12 约束⾯的法向 @129
13 ⼤胆猜想 @131
14 完全解码拉格朗⽇乘数法 @132
15 均匀分布 @133
16 ⼆项分布 @134
17 ⾼斯分布 @135
18 beta分布 @135
1 环境搭建 @136
2 pytorch慢到⽆法安装，怎么办？ @137
1 安装慢到装不上 @137
2 这样能正常安装 @138
3 最关键⼀步 @138
4 测试是否安装成功 @139
3 ⾃动群发邮件 @139
4 ⼆分搜索 @140
5 爬取天⽓数据并解析温度值 @141
6 制作⼩⽽美的计算器 @144
1) ui设计 @144
2) 转py⽂件 @146
3) 计算器实现逻辑 @146
1 创建DataFrame@150
2 导⼊数据 @150
3 处理组合值 @152
4 访问某列 @153
5 连接两个表 @154
6 按列筛选 @155
7 按照Movie ID 分组 @156
8 按照电影得分排序 @156
9 分组后使⽤聚合函数 @156
10 频率分布直⽅图 @159
11 最⼩抽样量 @159
12 去重和连表 @160
13 结果分析 @161
14 ⽣成哑变量 @164
15 讨厌的SettingWithCopyWarning！！！ @164
16 NumPy 数据归⼀化、分布可视化 @166
17 Pandas 使⽤技巧 @170
1 Flask版 hello world@170
2 Flask之数据⼊库操作 @171
1)导⼊ sqlite3，未安装前使⽤命令 pip install sqlite3@171
2)⼿动创建⼀个数据库实例 db, 命名 test.db@171
3)创建与数据库实例 test.db的连接:@172
4)拿到连接 conn的cursor@172
5)创建第⼀张表 books@172
6)插⼊⼀⾏记录 @172
7)⼀次插⼊多⾏记录 @172
8)提交 @172
9)关闭期初建⽴的连接conn@173
10)查看结果 例⼦君使⽤ vs code，在扩展库中选择： SQLite安装。 @173
3 Flask各层调⽤关系 @174
1) 发出请求 @174
2) 视图层 views接收1)步发出的请求，Flask中使⽤解释器的⽅式处理这个求情，实例代码如下，它通常 @174
3) models层会负责创建数据模型，执⾏CRUD操作 @174
4) 模板⽂件层处理html模板 @174
5) 组合后返回html@174
6) models层和html模板组合后返回给views层 @174
7）最后views层响应并渲染到浏览器页⾯，我们就能看到请求的页⾯。 @174
4 Flask之表单操作 @175
1 开篇 @175
2 基本表单 @175
3 html模板 @176
4 index页⾯路由 @176
5 完整代码 @177
6 两个错误 @178
1) CSRF需要配置密码 @178
2) index.html未找到异常 @178
5 Flask之Pyecharts绘图 @178
